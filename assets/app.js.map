{
  "version": 3,
  "file": "app.js",
  "sources": [
    "tmp/transpiled/app/app.js",
    "tmp/transpiled/app/controllers/application.js",
    "tmp/transpiled/app/controllers/dummy.js",
    "tmp/transpiled/app/controllers/starter.js",
    "tmp/transpiled/app/models/card.js",
    "tmp/transpiled/app/models/deal.js",
    "tmp/transpiled/app/models/dummy-hand.js",
    "tmp/transpiled/app/models/hand.js",
    "tmp/transpiled/app/routes.js",
    "tmp/transpiled/app/routes/dummy-index.js",
    "tmp/transpiled/app/routes/dummy.js",
    "tmp/transpiled/app/routes/index.js",
    "tmp/transpiled/app/routes/starter.js",
    "tmp/transpiled/app/utils/constants.js",
    "tmp/transpiled/app/utils/utils.js",
    "tmp/transpiled/app/views/bid-view.js",
    "tmp/transpiled/app/views/card-view.js",
    "tmp/transpiled/app/views/popover-view.js"
  ],
  "names": [],
  "mappings": "AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,K;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,K;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,K;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,K;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,K;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,K;ACjlHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,K;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,K;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,K;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,K;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,K;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,K;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,K;AClDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,K;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,K;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,K",
  "sourcesContent": [
    "define(\"appkit/app\",\n  [\"resolver\",\"appkit/routes\"],\n  function(Resolver, routes) {\n    \"use strict\";\n    var BP;\n\n    Ember.LOG_VERSION = false;\n\n    BP = Ember.Application.create({\n      rootElement: \"#bridge-points\",\n      modulePrefix: \"appkit\",\n      Resolver: Resolver\n    });\n\n\n    BP.Router.map(routes);\n\n\n    return BP;\n  });",
    "define(\"appkit/controllers/application\",\n  [],\n  function() {\n    \"use strict\";\n    var ApplicationController;\n\n    ApplicationController = Ember.ObjectController.extend({\n      activeRouteName: \"\",\n      isStarterRoute: (function() {\n        return this.get(\"activeRouteName\") === \"starter\";\n      }).property(\"activeRouteName\"),\n      isDummyRoute: (function() {\n        return this.get(\"activeRouteName\") === \"dummy\";\n      }).property(\"activeRouteName\")\n    });\n\n\n    return ApplicationController;\n  });",
    "define(\"appkit/controllers/dummy\",\n  [],\n  function() {\n    \"use strict\";\n    var DummyController;\n\n    DummyController = Ember.ObjectController.extend();\n\n\n    return DummyController;\n  });",
    "define(\"appkit/controllers/starter\",\n  [],\n  function() {\n    \"use strict\";\n    var HandController;\n\n    HandController = Ember.ObjectController.extend();\n\n\n    return HandController;\n  });",
    "define(\"appkit/models/card\",\n  [],\n  function() {\n    \"use strict\";\n    var Card;\n\n    Card = Ember.Object.extend({\n      value: (function() {\n        return this.get(\"content\")[1];\n      }).property(\"content\"),\n      suit: (function() {\n        return this.get(\"content\")[0];\n      }).property(\"content\"),\n      toString: function() {\n        return this.get(\"content\");\n      }\n    });\n\n\n    return Card;\n  });",
    "define(\"appkit/models/deal\",\n  [\"appkit/utils/constants\"],\n  function(Constants) {\n    \"use strict\";\n    var Deal;\n\n    Deal = Deal = (function() {\n      Deal.MAX = bigInt(\"53644737765488792839237440000\");\n\n      Deal.random = function() {\n        var dealer, i, id, part, vulnerable, _i;\n        dealer = Constants.DIRECTIONS[Math.floor(Math.random() * 4)];\n        vulnerable = Constants.VULNERABILITIES[Math.floor(Math.random() * 4)];\n        while (!(id != null ? id.lesserOrEquals(Deal.MAX) : void 0)) {\n          part = \"\";\n          for (i = _i = 0; _i <= 28; i = ++_i) {\n            part += Math.floor(Math.random() * 9);\n          }\n          id = bigInt(part);\n        }\n        return new Deal(id, dealer, vulnerable);\n      };\n\n      function Deal(id, dealer, vulnerable) {\n        this.id = bigInt(id);\n        this.dealer = dealer;\n        this.vulnerable = vulnerable;\n      }\n\n      Deal.prototype.isValid = function() {\n        var _ref;\n        return (Constants.DIRECTIONS.indexOf(this.dealer) != null) && (Constants.VULNERABILITIES.indexOf(this.vulnerable) != null) && ((_ref = this.id) != null ? _ref.greaterOrEquals(0) : void 0) && this.id.lesserOrEquals(this.constructor.MAX);\n      };\n\n      Deal.prototype.n = function() {\n        return this._n || this.dealCards().n;\n      };\n\n      Deal.prototype.e = function() {\n        return this._e || this.dealCards().e;\n      };\n\n      Deal.prototype.s = function() {\n        return this._s || this.dealCards().s;\n      };\n\n      Deal.prototype.w = function() {\n        return this._w || this.dealCards().w;\n      };\n\n      Deal.prototype.dealCards = function() {\n        var id, k,\n          _this = this;\n        this._n = [];\n        this._e = [];\n        this._s = [];\n        this._w = [];\n        k = this.constructor.MAX;\n        id = this.id;\n        Constants.CARDS.forEach(function(card, i) {\n          var x;\n          x = k.multiply(13 - _this._n.length).divide(52 - i);\n          if (id.lesser(x)) {\n            _this._n.push(card);\n          } else {\n            id = id.subtract(x);\n            x = k.multiply(13 - _this._e.length).divide(52 - i);\n            if (id.lesser(x)) {\n              _this._e.push(card);\n            } else {\n              id = id.subtract(x);\n              x = k.multiply(13 - _this._s.length).divide(52 - i);\n              if (id.lesser(x)) {\n                _this._s.push(card);\n              } else {\n                id = id.subtract(x);\n                x = k.multiply(13 - _this._w.length).divide(52 - i);\n                _this._w.push(card);\n              }\n            }\n          }\n          return k = x;\n        });\n        return {\n          n: this._n,\n          e: this._e,\n          s: this._s,\n          w: this._w\n        };\n      };\n\n      return Deal;\n\n    })();\n\n\n    return Deal;\n  });",
    "define(\"appkit/models/dummy-hand\",\n  [\"appkit/models/card\",\"appkit/models/hand\",\"appkit/utils/constants\"],\n  function(Card, Hand, Constants) {\n    \"use strict\";\n    var DummyHand;\n\n    DummyHand = Ember.Object.extend({\n      hand: (function() {\n        return Hand.create({\n          id: this.get(\"id\"),\n          cards: this.get(\"cards\")\n        });\n      }).property(\"deal\", \"cards.@each\"),\n      trump: (function() {\n        var suit;\n        suit = this.get(\"bid\").slice(1);\n        if (suit === \"NT\") {\n          return null;\n        } else {\n          return suit;\n        }\n      }).property(\"bid\"),\n      trumpCards: (function() {\n        return this.get(\"hand.cards\").filterBy(\"suit\", this.get(\"trump\"));\n      }).property(\"trump\", \"hand.cards.@each\"),\n      dummy: (function() {\n        return this.get(\"hand.starter\") + this.get(\"shortSuits\");\n      }).property(\"hand\", \"shortSuits\"),\n      shortSuits: (function() {\n        var result,\n          _this = this;\n        result = 0;\n        Constants.SUITS.without(this.get(\"trump\")).forEach(function(suit) {\n          var cardsInSuit;\n          cardsInSuit = _this.get(\"hand.cards\").filterBy(\"suit\", suit);\n          return result += (function() {\n            switch (cardsInSuit.get(\"length\")) {\n              case 0:\n                return this.get(\"trumpCards.length\");\n              case 1:\n                if (this.get(\"trumpCards.length\") >= 4) {\n                  return 3;\n                } else {\n                  return 2;\n                }\n                break;\n              case 2:\n                return 1;\n              default:\n                return 0;\n            }\n          }).call(_this);\n        });\n        if (result > this.get(\"trumpCards.length\")) {\n          return this.get(\"trumpCards.length\");\n        } else {\n          return result;\n        }\n      }).property(\"hand.cards.@each\", \"trump\", \"trumpCards.@each\")\n    });\n\n\n    return DummyHand;\n  });",
    "define(\"appkit/models/hand\",\n  [\"appkit/models/card\"],\n  function(Card) {\n    \"use strict\";\n    var Hand;\n\n    Hand = Ember.Object.extend({\n      cards: (function(key, value) {\n        if (arguments.length === 2) {\n          return value.map(function(card) {\n            return Card.create({\n              content: card\n            });\n          });\n        }\n      }).property(),\n      hcp: (function() {\n        var cards;\n        cards = this.get(\"cards\");\n        return cards.filterBy(\"value\", \"A\").length * 4 + cards.filterBy(\"value\", \"K\").length * 3 + cards.filterBy(\"value\", \"Q\").length * 2 + cards.filterBy(\"value\", \"J\").length;\n      }).property(\"cards\"),\n      underrated: (function() {\n        var cards;\n        cards = this.get(\"cards\");\n        return cards.filterBy(\"value\", \"A\").length + cards.filterBy(\"value\", \"T\").length;\n      }).property(\"cards\"),\n      overrated: (function() {\n        var cards;\n        cards = this.get(\"cards\");\n        return cards.filterBy(\"value\", \"Q\").length + cards.filterBy(\"value\", \"J\").length;\n      }).property(\"cards\"),\n      adjust3: (function() {\n        switch (Math.abs(this.get(\"underrated\") - this.get(\"overrated\"))) {\n          case 0:\n          case 1:\n          case 2:\n            return 0;\n          case 3:\n          case 4:\n          case 5:\n            if (this.get(\"underrated\") > this.get(\"overrated\")) {\n              return 1;\n            } else {\n              return -1;\n            }\n            break;\n          default:\n            if (this.get(\"underrated\") > this.get(\"overrated\")) {\n              return 2;\n            } else {\n              return -2;\n            }\n        }\n      }).property(\"underrated\", \"overrated\"),\n      dubious: (function() {\n        var cards, result,\n          _this = this;\n        cards = this.get(\"cards\");\n        result = 0;\n        [\"C\", \"D\", \"H\", \"S\"].forEach(function(suit) {\n          var cardsInSuit;\n          cardsInSuit = cards.filterBy(\"suit\", suit).mapBy(\"value\");\n          if (_this.isDubiousSingleton(cardsInSuit) || _this.isDubiousDoubleton(cardsInSuit)) {\n            return result -= 1;\n          }\n        });\n        return result;\n      }).property(\"cards\"),\n      isDubiousSingleton: function(cards) {\n        var _ref;\n        if (cards.length !== 1) {\n          return false;\n        }\n        return (_ref = cards[0]) === \"K\" || _ref === \"Q\" || _ref === \"J\";\n      },\n      isDubiousDoubleton: function(cards) {\n        if (cards.length !== 2) {\n          return false;\n        }\n        return _.intersection(cards, [\"Q\", \"J\"]).length >= 1;\n      },\n      qualitySuit: (function() {\n        var cards, result;\n        cards = this.get(\"cards\");\n        result = 0;\n        [\"C\", \"D\", \"H\", \"S\"].forEach(function(suit) {\n          var cardsInSuit;\n          cardsInSuit = cards.filterBy(\"suit\", suit).mapBy(\"value\");\n          if (cardsInSuit.length >= 4 && _.intersection(cardsInSuit, [\"A\", \"K\", \"Q\", \"J\", \"T\"]).length >= 3) {\n            return result += 1;\n          }\n        });\n        return result;\n      }).property(\"cards\"),\n      longSuit: (function() {\n        var cards, result;\n        cards = this.get(\"cards\");\n        result = 0;\n        [\"C\", \"D\", \"H\", \"S\"].forEach(function(suit) {\n          var cardsInSuit;\n          cardsInSuit = cards.filterBy(\"suit\", suit);\n          if (cardsInSuit.length >= 5) {\n            return result += cardsInSuit.length - 4;\n          }\n        });\n        return result;\n      }).property(\"cards\"),\n      starter: (function() {\n        return this.get(\"hcp\") + this.get(\"adjust3\") + this.get(\"dubious\") + this.get(\"qualitySuit\") + this.get(\"longSuit\");\n      }).property(\"hcp\", \"adjust3\", \"dubious\", \"qualitySuit\", \"longSuit\")\n    });\n\n\n    return Hand;\n  });",
    "define(\"appkit/routes\",\n  [],\n  function() {\n    \"use strict\";\n    var Routes;\n\n    Routes = function() {\n      this.route(\"index\", {\n        path: \"/\"\n      });\n      this.route(\"starter\", {\n        path: \"/starter/:id/\"\n      });\n      this.route(\"dummy-index\", {\n        path: \"/dummy\"\n      });\n      return this.route(\"dummy\", {\n        path: \"/dummy/:id/:bid\"\n      });\n    };\n\n\n    return Routes;\n  });",
    "define(\"appkit/routes/dummy-index\",\n  [\"appkit/models/deal\"],\n  function(Deal) {\n    \"use strict\";\n    var WtfIndexRoute;\n\n    WtfIndexRoute = Ember.Route.extend({\n      redirect: function() {\n        var bid, deal;\n        deal = Deal.random();\n        bid = [\"1H\", \"1S\"][Math.floor(Math.random() * 2)];\n        return this.transitionTo(\"/dummy/\" + (deal.id.toString()) + \"/\" + bid);\n      }\n    });\n\n\n    return WtfIndexRoute;\n  });",
    "define(\"appkit/routes/dummy\",\n  [\"appkit/models/deal\",\"appkit/models/dummy-hand\",\"appkit/utils/utils\",\"appkit/utils/constants\"],\n  function(Deal, DummyHand, Utils, Constants) {\n    \"use strict\";\n    var DummyRoute,\n      __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };\n\n    DummyRoute = Ember.Route.extend({\n      setupController: function(controller, model) {\n        this._super(controller, model);\n        return this.controllerFor(\"application\").set(\"activeRouteName\", \"dummy\");\n      },\n      model: function(params) {\n        var bid, deal;\n        deal = new Deal(params.id, \"N\", \"NONE\");\n        bid = params.bid.toUpperCase();\n        if (__indexOf.call(Constants.CONTRACTS, bid) < 0) {\n          throw \"Invalid bid\";\n        }\n        if (!deal.isValid()) {\n          throw \"Invalid deal\";\n        }\n        return DummyHand.create({\n          id: deal.id.toString(),\n          cards: Utils.sortCards(deal.n()),\n          bid: bid\n        });\n      },\n      serialize: function(model) {\n        return {\n          id: model.get(\"id\"),\n          bid: model.get(\"bid\")\n        };\n      }\n    });\n\n\n    return DummyRoute;\n  });",
    "define(\"appkit/routes/index\",\n  [\"appkit/models/deal\"],\n  function(Deal) {\n    \"use strict\";\n    var IndexRoute;\n\n    IndexRoute = Ember.Route.extend({\n      redirect: function() {\n        var deal;\n        deal = Deal.random();\n        return this.transitionTo(\"/starter/\" + (deal.id.toString()));\n      }\n    });\n\n\n    return IndexRoute;\n  });",
    "define(\"appkit/routes/starter\",\n  [\"appkit/models/deal\",\"appkit/models/hand\",\"appkit/utils/utils\"],\n  function(Deal, Hand, Utils) {\n    \"use strict\";\n    var StarterRoute;\n\n    StarterRoute = Ember.Route.extend({\n      setupController: function(controller, model) {\n        this._super(controller, model);\n        return this.controllerFor(\"application\").set(\"activeRouteName\", \"starter\");\n      },\n      model: function(params) {\n        var deal;\n        deal = new Deal(params.id, \"N\", \"NONE\");\n        if (!deal.isValid()) {\n          throw \"Invalid deal\";\n        }\n        return Hand.create({\n          id: deal.id.toString(),\n          cards: Utils.sortCards(deal.n())\n        });\n      },\n      serialize: function(model) {\n        return {\n          id: model.get(\"id\")\n        };\n      }\n    });\n\n\n    return StarterRoute;\n  });",
    "define(\"appkit/utils/constants\",\n  [],\n  function() {\n    \"use strict\";\n    var Constants;\n\n    Constants = {};\n\n    Constants.CONTRACTS = [\"1C\", \"1D\", \"1H\", \"1S\", \"1NT\", \"2C\", \"2D\", \"2H\", \"2S\", \"2NT\", \"3C\", \"3D\", \"3H\", \"3S\", \"3NT\", \"4C\", \"4D\", \"4H\", \"4S\", \"4NT\", \"5C\", \"5D\", \"5H\", \"5S\", \"5NT\", \"6C\", \"6D\", \"6H\", \"6S\", \"6NT\", \"7C\", \"7D\", \"7H\", \"7S\", \"7NT\"];\n\n    Constants.PASS = \"PASS\";\n\n    Constants.DOUBLE = \"X\";\n\n    Constants.REDOUBLE = \"XX\";\n\n    Constants.MODIFIERS = [Constants.DOUBLE, Constants.REDOUBLE];\n\n    Constants.BIDS = Constants.CONTRACTS.concat(Constants.MODIFIERS, [Constants.PASS]);\n\n    Constants.CARDS = [\"C2\", \"C3\", \"C4\", \"C5\", \"C6\", \"C7\", \"C8\", \"C9\", \"CT\", \"CJ\", \"CQ\", \"CK\", \"CA\", \"D2\", \"D3\", \"D4\", \"D5\", \"D6\", \"D7\", \"D8\", \"D9\", \"DT\", \"DJ\", \"DQ\", \"DK\", \"DA\", \"H2\", \"H3\", \"H4\", \"H5\", \"H6\", \"H7\", \"H8\", \"H9\", \"HT\", \"HJ\", \"HQ\", \"HK\", \"HA\", \"S2\", \"S3\", \"S4\", \"S5\", \"S6\", \"S7\", \"S8\", \"S9\", \"ST\", \"SJ\", \"SQ\", \"SK\", \"SA\"];\n\n    Constants.DIRECTIONS = [\"N\", \"E\", \"S\", \"W\"];\n\n    Constants.VULNERABILITIES = [\"NONE\", \"NS\", \"EW\", \"BOTH\"];\n\n    Constants.SUITS = [\"C\", \"D\", \"H\", \"S\"];\n\n    Constants.TRUMPS = Constants.SUITS.concat(\"NT\");\n\n    Constants.SIDES = [\"NS\", \"EW\"];\n\n\n    return Constants;\n  });",
    "define(\"appkit/utils/utils\",\n  [],\n  function() {\n    \"use strict\";\n    var Utils, sortCardSuits, sortCards,\n      _this = this,\n      __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };\n\n    sortCards = function(cards, trump) {\n      var sortedSuits, sortedValues, suits;\n      suits = (cards.map(function(card) {\n        return card[0];\n      })).uniq();\n      sortedSuits = sortCardSuits(suits, trump);\n      sortedValues = [\"A\", \"K\", \"Q\", \"J\", \"T\", \"9\", \"8\", \"7\", \"6\", \"5\", \"4\", \"3\", \"2\"];\n      return Ember.copy(cards).sort(function(a, b) {\n        if (a[0] === b[0]) {\n          return sortedValues.indexOf(a[1]) - sortedValues.indexOf(b[1]);\n        } else {\n          return sortedSuits.indexOf(a[0]) - sortedSuits.indexOf(b[0]);\n        }\n      });\n    };\n\n    sortCardSuits = function(suits, trump) {\n      var black, red;\n      black = [\"S\", \"C\"].filter(function(s) {\n        return __indexOf.call(suits, s) >= 0;\n      });\n      red = [\"H\", \"D\"].filter(function(s) {\n        return __indexOf.call(suits, s) >= 0;\n      });\n      if (black.contains(trump)) {\n        return black.splice(black.indexOf(trump), 1).concat(red.splice(0, 1), black.splice(0, 1), red.splice(0, 1));\n      } else if (red.contains(trump)) {\n        return red.splice(red.indexOf(trump), 1).concat(black.splice(0, 1), red.splice(0, 1), black.splice(0, 1));\n      } else if (black.length >= red.length) {\n        return black.splice(0, 1).concat(red.splice(0, 1), black.splice(0, 1), red.splice(0, 1));\n      } else {\n        return red.splice(0, 1).concat(black.splice(0, 1), red.splice(0, 1), black.splice(0, 1));\n      }\n    };\n\n    Utils = {\n      sortCards: sortCards,\n      sortCardSuits: sortCardSuits\n    };\n\n\n    return Utils;\n  });",
    "define(\"appkit/views/bid-view\",\n  [],\n  function() {\n    \"use strict\";\n    var BidView;\n\n    BidView = Ember.View.extend({\n      tagName: \"span\",\n      templateName: \"bid\",\n      level: (function() {\n        return this.get(\"content\")[0];\n      }).property(\"content\"),\n      suit: (function() {\n        return this.get(\"content\").slice(1);\n      }).property(\"content\"),\n      symbol: (function() {\n        switch (this.get(\"suit\")) {\n          case \"C\":\n            return \"<span class='suit-c'>♣</span>\";\n          case \"D\":\n            return \"<span class='suit-d'>♦</span>\";\n          case \"H\":\n            return \"<span class='suit-h'>♥</span>\";\n          case \"S\":\n            return \"<span class='suit-s'>♠</span>\";\n          default:\n            return this.get(\"suit\");\n        }\n      }).property(\"suit\")\n    });\n\n\n    return BidView;\n  });",
    "define(\"appkit/views/card-view\",\n  [],\n  function() {\n    \"use strict\";\n    var CardView;\n\n    CardView = Ember.View.extend({\n      classNames: [\"card\"],\n      classNameBindings: [\"isDisabled:disabled\", \"suitClassName\"],\n      templateName: (function() {\n        var name;\n        name = this.get(\"card.value\") ? this.get(\"card.value\").toLowerCase() : \"unknown\";\n        return \"cards/\" + name;\n      }).property(\"card.value\"),\n      suitClassName: (function() {\n        if (this.get(\"card.suit\")) {\n          return \"suit-\" + (this.get(\"card.suit\").toLowerCase());\n        }\n      }).property(\"card.suit\"),\n      isDisabled: true\n    });\n\n\n    return CardView;\n  });",
    "define(\"appkit/views/popover-view\",\n  [],\n  function() {\n    \"use strict\";\n    var PopoverView;\n\n    PopoverView = Ember.View.extend({\n      tagName: \"span\",\n      classNames: [\"description\"],\n      didInsertElement: function() {\n        return this.$(\"button\").popover();\n      }\n    });\n\n\n    return PopoverView;\n  });"
  ]
}